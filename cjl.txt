对使用git进行版本控制的理解：

版本控制是一种记录文件内容变化，以便将来查阅特定版本修订情况的系统，用于记录文件修改历史记录，从而让用户能够查看历史版本，方便版本切换。
git属于分布式版本控制工具，与集中式版本控制工具相比的优势在于当任何一处协同工作用的文件发生故障时，事后都可以用其他客户端的本地仓库进行修复（例如服务器断网的情况），而且每个客户端保存的都是完整的项目，更加安全。

git的大致工作原理：
1、工作区写代码------>(git add)2、暂存区临时存储------->(git commit)3、本地库形成历史版本
ps：1、2都可以删除更改，但是如果提交到本地库就无法修改了

命令：
git config--global user.name（用户名）~~~~~~设置用户签名
git config--global user.email（邮箱）~~~~~~设置用户签名
git init~~~~~~~初始化本地库
git status~~~~~~~查看本地库状态
git add 文件名~~~~~~添加到暂存区
git commit -m“日志信息”文件名~~~~~~提交到本地库
git reflog~~~~~~查看历史记录
git log~~~~~~查看详细历史记录（完整版本号、author、date...）
git reset --hard 版本号~~~~~~版本穿梭（指针转移）
ps：输完命令，选中版本号，点击鼠标滚轮粘贴
git rm --cached 文件名~~~~~~删除暂存区文件
git branch 分支名~~~~~~创建分支
git branch -v~~~~~~查看分支
git checkout 分支名~~~~~~切换分支
git merge 分支名~~~~~~把指定的分支合并到当前分支上
git push 别名 分支名~~~~~~推送本地分支至远程库

快捷键：
i~~进入insert模式
esc~~退出insert模式
ll~~~详细显示文件及文件夹信息
vim 文件名~~~打开文件
yy~~~复制
p~~~粘贴
ctrl+L~~~清屏
shift+“；”/esc(返回命令模式)：wq~~~保存
cat~~~查看工作区修改内容


对二自由度的一些理解：在汽车操纵动力学方面，二自由度模型是一种简化的车辆模型，用于研究车辆的转向特性。它主要考虑车辆的侧向运动和横摆运动两个自由度。在整车控制系统中，二自由度模型可以将控制系统的设计分为两个部分：一个是用于跟踪参考输入的部分，另一个是用于抑制干扰的部分。

阿克曼转角：是汽车转向时，为了使车辆的四个车轮都能绕着一个共同的瞬时转向中心做纯滚动，内外侧车轮转角之间存在的一种特定的几何关系。一般来说，内侧车轮转角比外侧车轮转角大，以确保车辆转弯时轮胎磨损最小并且转向更加平稳，操作更加灵活。（轴距？轮距？转弯半径？cot？）

魔术轮胎：有些高性能轮胎或者具有特殊设计的轮胎被称为 “魔术轮胎”，这通常意味着这种轮胎在某些方面有着超越普通轮胎的优异性能，如在抓地力、排水性、耐磨性等多个性能指标之间取得了很好的平衡，或者能够适应多种复杂的路况和驾驶场景。（橡胶质地？花纹设计？）


整车动力学：
主要研究汽车整体运动中的性能，如直线行驶、转向、行驶的平稳性等等。
直线行驶性能主要包括车辆的加速、减速、匀速等，涉及到发动机输出扭矩如何通过传动系统传递到车轮，考虑车辆质量、轮胎与地面的摩擦力等因素对性能的影响
转向性能则主要涉及汽车转弯的轨迹、稳定性和操纵性等。
行驶平稳性是关注于汽车在行驶过程中对路面颠簸不平程度的响应
总而言之，整车动力学是一门适用于汽车设计、开发、性能优化、安全性提升，舒适度提高等方面的综合性学科

我们常用matlab/simulink研究整车动力学是因为整车动力学涉及大量复杂数学计算比如力和力矩的平衡计算、微分方程求解等，而matlab具有高效的数值计算求解功能，可以快速准确地满足整车动力学所涉及的计算求值问题；此外matlab还具有强大的数据处理分析能力，将收集到的研究数据整理分析并以直观的图形方式展示（示波器），有助于我们理解。

simulink则是为整车动力学的建模提供比较直观的图形界面，比如能将汽车中的发动机模块、离合器模块、变速器模块和差速器模块按照实际的物理连接关系搭建起来，每个模块可以有自己的输入输出接口，通过信号线连接表示动力和信号的传递。
同时不只是模块之间的联系，simulink还可以联系多个系统进行仿真研究，模拟汽车在不同工况下的运行情况